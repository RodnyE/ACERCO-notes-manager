/* eslint-disable no-process-env */
/* eslint-disable no-console */
const {
	BROWSER = "CHROME",
	browserName,
	version,
	platform,
	TRAVIS_JOB_NUMBER,
	TRAVIS_BUILD_NUMBER,
	SAUCE_USERNAME,
	SAUCE_ACCESS_KEY,
} = process.env;

function exit(message) {
	console.log(message);
	/* eslint-disable-next-line no-process-exit */
	process.exit(1);
}

let fullBrowserName = null;
import chalk from "chalk";
import url from "url";
import finalhandler from "finalhandler";
import { remote } from "webdriverio";
import { expect } from "chai";
import serveStatic from "serve-static";
const port = 9000;
import http from "http";
import { dirname } from "path";
import { fileURLToPath } from "url";

const __dirname = dirname(fileURLToPath(import.meta.url));

async function sleep(ms) {
	return new Promise(function (resolve) {
		setTimeout(() => resolve(), ms);
	});
}

// These options are the modern, W3C ones
const sauceLabsW3COptions = {
	browserName,
	browserVersion: version,
	platformName: platform,
	"sauce:options": {
		name: "docxtemplater mocha",
		build: TRAVIS_BUILD_NUMBER,
		tags: ["docxtemplater"],
		tunnelIdentifier: TRAVIS_JOB_NUMBER,
		public: true,
	},
};

// These options are the legacy, JWP ones
const saucelabsJWPOptions = {
	browserName,
	version,
	platform,
	tags: ["docxtemplater"],
	name: "docxtemplater mocha",
	"tunnel-identifier": TRAVIS_JOB_NUMBER,
	tunnelIdentifier: TRAVIS_JOB_NUMBER,
	build: TRAVIS_BUILD_NUMBER,
	captureHtml: true,
	public: true,
};

// USE JWP instead of W3C for chrome < 75 only
const useJWP = browserName === "chrome" && +version < 75;

const browserCapability = {
	CHROME: {
		browserName: "chrome",
		"goog:chromeOptions": {
			args: [
		
