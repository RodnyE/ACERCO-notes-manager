"use strict";

const stringRepeat = require("./string-repeat.js");

module.exports = function printy(parsed, indentLevel = 0) {
  let currentIndentLevel = indentLevel;
  let output = "";

  function printElement(element, level) {
    const indent = " ".repeat(level);
    const nextIndent = " ".repeat(level + 1);
    const previousIndent = " ".repeat(level - 1);

    switch (element.type) {
      case "tag":
        if (element.position === "end") {
          currentIndentLevel = level - 1;
        }
        if (level < 0) {
          throw new Error(`Indent level is negative: ${level}`);
        }
        break;
      case "placeholder":
        output += `${indent}={${element.value}}\n`;
        break;
      default:
        output += `${indent}${element.value}\n`;
    }

    if (element.subparsed) {
      output += `${indent}*${"=".repeat(element.value.length)}\n`;
      output += printy(element.subparsed, level + 1);
      output += `${previousIndent}*${"=".repeat(element.value.length)}\n`;
    }

    if (element.type === "tag" && element.position === "start") {
      currentIndentLevel = level + 1;
    }
  }

  parsed.reduce((output, element) => {
    const splitted = element.value.split(/[\n\r\t]+/g);
    const value = splitted.join("");

    if (value) {
      printElement(element, currentIndentLevel);
    }

    return output;
  }, output);

  if (currentIndentLevel < 0) {
    const err = new Error("Indent level is negative");
    err.properties = {
      result: output
    };
    throw err;
  }

  return output.trim();
};
