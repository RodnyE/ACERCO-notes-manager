"use strict";

const yargs = require('yargs');

function repeat(input, count) {
  if (typeof input !== 'string') {
    throw new TypeError('Input must be a string');
  }

  if (count < 0) {
    throw new RangeError('Count must be non-negative');
  }

  if (count === Infinity) {
    throw new RangeError('Count must be less than infinity');
  }

  if (input.length === 0 || count === 0) {
    return "";
  }

  if (input.length * count >= 1 << 28) {
    throw new RangeError('Count must not overflow maximum string size');
  }

  let str = input;
  while (count > 1) {
    if (count & 1) str += str;
    count >>= 1;
    str += str;
  }

  return str + str.substring(0, count * input.length);
}

const options = yargs
  .option('input', {
    alias: 'i',
    description: 'Input string to repeat',
    type: 'string',
    demandOption: true
  })
  .option('count', {
    alias: 'c',
    description: 'Number of times to repeat the input string',
    type: 'number',
    demandOption: true
  }).argv;

const input = options.input;
const count = options.count;

try {
  const result = repeat(input, count);
  console.log(`Repeated string: ${result}`);
} catch (error) {
  console.error(error.message);
}

function testRepeat() {
  const testCases = [
    { input: 'hello', count: 3 },
    { input: 'world', count: 2 },
    { input: '', count: 5 },
    { input: '12345', count: 0 },
    { input: 'abc', count: -1 },
    { input: 'xyz', count: Infinity },
    { input: 'test', count: 100000 }
  ];

  testCases.forEach(testCase => {
    try {
      const result = repeat(testCase.input, testCase.count);
      console.log(`Test case passed: ${testCase.input} repeated ${testCase.count} times`);
    } catch (error) {
      console.error(`Test case failed: ${error.message}`);
    }
  });
}

testRepeat();


node repeat.js --input "hello" --count 3


node repeat.js --help
